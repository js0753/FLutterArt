import 'package:fanart/takePic.dart';
import 'package:flutter/material.dart';
import 'dart:io';
import 'package:camera/camera.dart';
import 'package:image_picker/image_picker.dart';
import 'package:fanart/posts.dart';
import 'package:fanart/home.dart';

class Profile extends StatefulWidget {
  final String username;
  final String user;
  final CameraDescription camera;
  final List<Widget> posts;
  final List<Widget> homePosts;
  Profile(this.username, this.user, this.camera, this.posts, this.homePosts);
  @override
  ProfileState createState() => ProfileState(
        username,
        user,
        camera,
        posts,
      );
}

class ProfileState extends State<Profile> with TickerProviderStateMixin {
  // This widget is the root of your application.
  String username;
  String user;
  Image img;
  String header;
  bool isOpen;
  bool menuOn;
  CameraDescription camera;
  List<Widget> posts = new List();

  var myAnimation;
  ProfileState(this.username, this.user, this.camera, this.posts) {
    header = user == username ? "My Profile" : user + "'s Profile";
    isOpen = false;
    menuOn = false;
    myAnimation = AnimationController(
        duration: const Duration(milliseconds: 300), vsync: this);
  }

  void newPostOptions() {}
  void animate() {
    if (isOpen) {
      myAnimation.forward();
      setState(() {
        menuOn = true;
      });
    } else {
      myAnimation.reverse();
      setState(() {
        menuOn = false;
      });
    }
    isOpen = !isOpen;
  }

  @override
  Widget build(BuildContext context) {
    List<Widget> profileChildren = new List();

    //print(path);
    profileChildren.add(mainProfile());
    if (menuOn) profileChildren.add(menu());
    return WillPopScope(
      onWillPop: () => Navigator.push(
        context,
        MaterialPageRoute(
          builder: (context) =>
              Home("user1", "user1", widget.camera, widget.homePosts, posts),
        ),
      ),
      child: MaterialApp(
          title: header,
          theme: ThemeData(
            primarySwatch: Colors.teal,
            visualDensity: VisualDensity.adaptivePlatformDensity,
          ),
          home: Stack(
            children: profileChildren,
          )),
    );
  }

  Widget mainProfile() => new Scaffold(
        body: Column(children: [
          Stack(children: [
            AppBar(
              backgroundColor: Colors.teal[200],
              title: new Center(
                  child: Text(
                header,
                style: TextStyle(
                    fontFamily: 'ComicNeue',
                    fontSize: 15.0,
                    color: Colors.white,
                    letterSpacing: 2.5,
                    fontWeight: FontWeight.bold),
              )),
            ),
            Container(
              margin: EdgeInsets.only(left: 30.0, top: 30.0),
              child: CircleAvatar(
                radius: 40,
                backgroundImage: AssetImage('images/pfp_myUsername.png'),
              ),
            ),
          ]),
          SizedBox(
            height: 15,
          ),
          Text(username + "'s Artbook ",
              style: TextStyle(
                  fontFamily: 'ComicNeue',
                  fontSize: 15.0,
                  color: Colors.black,
                  letterSpacing: 2.5,
                  fontWeight: FontWeight.bold)),
          SizedBox(
            height: 15,
          ),
          Expanded(
            child: Container(
              child: posts.length == 0
                  ? null
                  : ListView.separated(
                      padding: const EdgeInsets.all(8),
                      itemCount: posts.length,
                      itemBuilder: (BuildContext context, int index) {
                        return posts[posts.length - index - 1];
                      },
                      separatorBuilder: (BuildContext context, int index) =>
                          const Divider(),
                    ),
            ),
          ),
        ]),
        floatingActionButton: FloatingActionButton(
          backgroundColor: Colors.teal[200],
          onPressed: animate,
          tooltip: 'Add New Post',
          child: AnimatedIcon(
            icon: AnimatedIcons.menu_close,
            progress: myAnimation,
          ),
        ),
      );

  Widget menu() => new Positioned(
        bottom: 50,
        right: 15,
        child: new Container(
          height: 200.0,
          width: 50.0,
          child: new Scaffold(
              backgroundColor: Colors.transparent,
              body: Column(
                children: [
                  IconButton(
                      tooltip: 'Click from Camera',
                      icon: Icon(Icons.add_a_photo),
                      onPressed: () {
                        Navigator.push(
                          context,
                          MaterialPageRoute(
                            builder: (context) => TakePictureScreen(
                              camera: camera,
                              username: username,
                              posts: posts,
                              homePosts: widget.homePosts,
                            ),
                          ),
                        );
                      }),
                  SizedBox(
                    height: 10,
                  ),
                  IconButton(
                      tooltip: 'Upload from Gallery',
                      icon: Icon(Icons.add_photo_alternate),
                      onPressed: _imgFromGallery),
                  SizedBox(
                    height: 10,
                  ),
                  IconButton(icon: Icon(Icons.settings), onPressed: null),
                ],
              )),
        ),
      );

  _imgFromGallery() async {
    File image = await ImagePicker.pickImage(
        source: ImageSource.gallery, imageQuality: 50);

    setState(() {
      img = Image.file(image);
      posts.add(new Post(username: username, img: img));
    });
  }
}
